include Makefile.versions

TIME = `date +%s`

TARGET_DIR = /build/target

OUTPUT_FILENAME = smoothwall-$(UPDATE_MODULE)-$(UPDATE_MODULEVERSION)-$(UPDATE_NAME).tar.gz

default: clean $(OUTPUT_FILENAME) updateinfo

patch.tar.gz:
	@mkdir distrib
	@(PREFIX=""; if [ "$(UPDATE_MODULE)" != "main" ]; then PREFIX=modules/$(UPDATE_MODULE); fi; \
	for I in \
		$(UPDATE_PACKAGES) \
	; do \
		make -C ../../$$PREFIX/$$I clean all; \
		if [ $$? -ne 0 ]; then \
			echo "$$I FAILED"; \
			exit 0; \
		fi; \
 		echo "Unpacking $$I ..."; \
		if [ "$$I" = "coretree" -o "$$I" = "$(UPDATE_MODULE)coretree" ]; then \
			tar -zxvf /$(TARGET_DIR)/smoothwall-$$I-*.tar.gz -C distrib -T coretree.list; \
		else \
			tar -zxf /$(TARGET_DIR)/smoothwall-$$I-*.tar.gz -C distrib; \
		fi; \
	done; \
	);

	@(if [ "$(KERNEL)" != "" ]; then \
		tar -zxf /$(TARGET_DIR)/smoothwall-coretree-*.tar.gz -C distrib ./settings/main/kernel; \
	fi;)

	@echo "Cleaning tree ..."
	@/build/striptree distrib/$(UPDATE_DIR)

	@echo "Building patch.tar.gz, stand by ..."
	@tar -zcf patch.tar.gz -C distrib .

updateinfo:
	@echo "Building update information file ..."	
	@echo "$(UPDATE_MODULE)|$(UPDATE_MODULEVERSION)|$(UPDATE_FULLNAME)||$(UPDATE_DESCRIPTION)|$(UPDATE_URL)||$(UPDATE_REBOOT)|$(UPDATE_SEVERITY)|$(UPDATE_ACTIVE)|$(UPDATE_HIDDEN)|$(UPDATE_DEPENDCY)||$(UPDATE_TIME)" >information

$(OUTPUT_FILENAME): patch.tar.gz updateinfo
	@echo "Making update file ..."
	@tar -zcf $(OUTPUT_FILENAME) patch.tar.gz setup information $(EXTRA_UPDATE_FILES)

clean:
	@rm -rf distrib

	@rm -f patch.tar.gz
	@rm -f $(OUTPUT_FILENAME)
	@rm -f updateinfo
	@rm -f information

download:
	@true

include ../../Makefile

include ../../Makefile.conf

include ../../Makefile.flags-arch

TARGET_DIR = ../../../target

OUTPUT_FILENAME = $(BASENAME)-$(UPDATE_NAME)-$(mARCH).tar.gz

all: clean $(OUTPUT_FILENAME) updateinfo

patch.tar.gz:
	# Build the packages
	cd ../../..; toolcrib/redo.sh $(UPDATE_PACKAGES)
	# Prep the tree
	mkdir distrib
	(for I in \
		$(UPDATE_PACKAGES) \
	; do \
 		echo "Unpacking $$I ..."; \
		if [ "$$I" = "coretree" ]; then \
			tar -xvf $(TARGET_DIR)/smoothwall-$$I.tar.gz -C distrib -T coretree.list; \
		else \
			tar -xf $(TARGET_DIR)/smoothwall-$$I.tar.gz -C distrib; \
		fi; \
	done; \
	);
	# Bump kernel version as needed
	if [ "$(KERNEL)" != "" ]; then \
		tar -xf /$(TARGET_DIR)/smoothwall-coretree.tar.gz -C distrib ./var/smoothwall/main/kernel; \
	fi;
	# Clear ClamAV files as needed
	if [ "$(CLAMAV)" != "" ]; then \
		rm -f distrib/var/clamav/*; \
	fi;
	# Other special prep's on the tree as needed
	@echo "Special file handling, if needed ..."
	@if [ -e pre-tar-setup ]; then . ./pre-tar-setup; fi
	# Strip most binaries
	@echo "Cleaning tree ..."
	../../../toolcrib/striptree distrib/$(UPDATE_DIR)
	# Build the patchball
	@echo "Building patch.tar.gz, stand by ..."
	tar cfz patch.tar.gz -C distrib .
	#

updateinfo:
	@echo "Building update information file ..."	
	@echo "$(UPDATE_ID)|$(UPDATE_NAME)-$(mARCH)" >information
	#

$(OUTPUT_FILENAME): patch.tar.gz updateinfo
	@echo "Making update file ..."
	tar cfz $(OUTPUT_FILENAME) patch.tar.gz setup information $(EXTRA_UPDATE_FILES)

clean:
	@rm -rf distrib
	@rm -f patch.tar.gz
	@rm -f $(OUTPUT_FILENAME)
	@rm -f updateinfo
	@rm -f information

download:
	@true
